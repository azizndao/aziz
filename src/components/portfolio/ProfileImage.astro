---
import type { HTMLAttributes } from "astro/types";
import { twMerge } from "tailwind-merge";
interface Props extends HTMLAttributes<"div"> {
  class?: string;
}
const { class: cls, ...attrs } = Astro.props;
---

<div class={twMerge("w-full h-full img-container", cls)} {...attrs}>
  <div>
    <img src="/images/me.png" class={"original"} />
    <img class={"blur"} src="/images/me16x35.png" />
  </div>
</div>

<script>
  const container = document.querySelector(".img-container");

  document
    .querySelector(".img-container img.original")
    ?.addEventListener("load", (event) => {
      container?.classList.add("loaded");
    });
</script>

<style>
  .img-container {
    /* position: relative; */
  }

  .img-container > div {
    position: relative;
    overflow: hidden;
    @apply ml-auto md:h-full w-full md:w-auto rounded-3xl lg:rounded-[3rem] object-cover aspect-[4/5] lg:aspect-[3/5];
  }

  img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: all 0.3s ease-in-out;
  }

  img.original {
    opacity: 0;
  }

  .blur {
    object-fit: cover;
    position: absolute;
    inset: 0;
    animtion: blur-animation 0.5s infinite;
  }

  @keyframes blur-animation {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  .img-container.loaded .original {
    opacity: 1;
  }

  .img-container.loaded .blur {
    animation: none;
    opacity: 0;
  }
</style>
