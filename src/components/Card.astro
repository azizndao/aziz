---
import Image from "astro/components/Image.astro";
export type CardProps = {
  title: string;
  description: string;
  href: string;
  thumbnail?: string;
  tags?: string[];
  date?: Date;
};

const props = Astro.props as CardProps;
---

<a
  href={props.href}
  class="card overflow-hidden flex flex-col gap-4 rounded-xl py-8 px-6 transition-colors duration-150 h-full bg-neutral-100 dark:bg-neutral-900 border border-neutral-300 dark:border-neutral-400/40 hover:bg-neutral-50 dark:hover:bg-neutral-800"
>
  <Image
    class="cover"
    src={props.thumbnail ?? ""}
    alt={props.title}
    loading="lazy"
    width={512}
    height={(512 * 9) / 19}
  />
  <h3 class="text-2xl">{props.title}</h3>
  <p class="text-base line-clamp-3">{props.description}</p>
  <footer>
    {
      props.tags && (
        <ul class="tag-list">
          {props?.tags?.slice(0, 3)?.map((tag) => (
            <li>
              <span class="inline-block text-sm px-4 py-1.5 rounded-full bg-neutral-200 dark:bg-neutral-800/90  dark:border-neutral-400">
                {tag}
              </span>
            </li>
          ))}
        </ul>
      )
    }
  </footer>
</a>

<style>
  header {
    display: flex;
    justify-content: space-between;
    margin-bottom: 1rem;
    padding: 0 4px;
  }

  .cover {
    border-radius: 1rem;
    width: 100%;
    height: auto;
    aspect-ratio: 16/9;
    object-fit: cover;
    @apply bg-neutral-300/70;
  }

  .card .cover {
    border-radius: 1rem;
  }

  p.body-large {
    line-clamp: 3;
    -webkit-line-clamp: 3;
    text-overflow: ellipsis;
    text-overflow: ellipsis;
  }

  footer {
    margin-top: auto;
  }

  .tag-list {
    display: flex;
    flex-wrap: wrap;
    gap: 0.75rem;
  }

  .tag {
    border-radius: 30000px;
    display: block;
    padding: 0.5rem 1rem;
    @apply bg-neutral-200 dark:bg-neutral-900 border;
  }
</style>
