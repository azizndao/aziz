const colors = require("tailwindcss/colors");

/** @type {import('tailwindcss').Config} */
module.exports = {
  content: ["./src/**/*.{astro,html,js,jsx,md,mdx,svelte,ts,tsx,vue}"],
  theme: {
    extend: {},
    colors: {
      // primary: colors.indigo,
      // secondary: colors.purple,
      // tertiary: colors.orange,
      // neutral: colors.gray,
      // danger: colors.red,
      // warning: colors.yellow,
      // transparent: colors.transparent,
      // white: colors.white,
      // black: colors.black,
      primary: "rgb(var(--primary))",
      "on-primary": "rgb(var(--on-primary))",
      "primary-container": "rgb(var(--primary-container))",
      "on-primary-container": "rgb(var(--on-primary-container))",
      secondary: "rgb(var(--secondary))",
      "on-secondary": "rgb(var(--on-secondary))",
      "secondary-container": "rgb(var(--secondary-container))",
      "on-secondary-container": "rgb(var(--on-secondary-container))",
      tertiary: "rgb(var(--tertiary))",
      "on-tertiary": "rgb(var(--on-tertiary))",
      "tertiary-container": "rgb(var(--tertiary-container))",
      "on-tertiary-container": "rgb(var(--on-tertiary-container))",
      error: "rgb(var(--error))",
      "on-error": "rgb(var(--on-error))",
      "error-container": "rgb(var(--error-container))",
      "on-error-container": "rgb(var(--on-error-container))",
      surface: "rgb(var(--surface))",
      "on-surface": "rgb(var(--on-surface))",
      "surface-variant": "rgb(var(--surface-variant))",
      "on-surface-variant": "rgb(var(--on-surface-variant))",
      background: "rgb(var(--background))",
      "on-background": "rgb(var(--on-background))",
      outline: "rgb(var(--outline))",
      "outline-variant": "rgb(var(--outline-variant))",
      "inverse-on-surface": "rgb(var(--inverse-on-surface))",
      "on-inverse-on-surface": "rgb(var(--inverse-on-surface))",
      "inverse-primary": "rgb(var(--inverse-primary))",
      "color-shadow": "rgb(var(--color-shadow))",
      "surface-tint": "rgb(var(--surface-tint))",
      scrim: "rgb(var(--scrim))",
    },
  },
  plugins: [],
};
